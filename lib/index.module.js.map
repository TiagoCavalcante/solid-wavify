{"mappings":"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","sources":["src/index.tsx","src/wave.tsx"],"sourcesContent":["import WaveBase from './wave';\nimport type { BaseWaveProps, WaveHTMLProps } from './wave';\n\nconst defaults = {\n  height: 20,\n  amplitude: 20,\n  speed: 0.15,\n  points: 3,\n};\n\nexport type WaveProps = WaveHTMLProps\n  & Pick<BaseWaveProps, \"fill\" | \"paused\">\n  & { options: Omit<BaseWaveProps, \"fill\" | \"paused\">; };\n\nexport default function Wave({\n  fill = \"#fff\",\n  paused = false,\n  options,\n  ...rest\n}: WaveProps) {\n  return (\n    <WaveBase\n      fill={fill}\n      paused={paused}\n      {...defaults}\n      {...options}\n      {...rest}\n    />\n  );\n}\n","import { createSignal, onCleanup, onMount } from 'solid-js';\nimport type { JSX, PropsWithChildren } from 'solid-js';\n\nexport type Point = {\n  x: number,\n  y: number;\n};\n\nexport type BaseWaveProps = {\n  style: JSX.CSSProperties,\n  className: string,\n  fill: JSX.IntrinsicElements[\"path\"][\"fill\"],\n  paused: Boolean,\n  id: string,\n  ref: HTMLDivElement | null,\n  height: number,\n  amplitude: number,\n  speed: number,\n  points: number,\n};\n\nexport type WaveHTMLProps = Omit<\n  JSX.IntrinsicElements[\"path\"],\n  keyof BaseWaveProps | \"children\"\n>;\n\nexport type WaveProps = Partial<BaseWaveProps & WaveHTMLProps>;\n\nexport default function Wave({\n  amplitude = 20,\n  height = 20,\n  points = 3,\n  speed = 0.15,\n\n  style,\n  className,\n  fill,\n  paused,\n  children,\n  id,\n  ref,\n\n  ...rest\n}: PropsWithChildren<WaveProps>) {\n  const [path, setPath] = createSignal('');\n\n  let lastUpdate = 0;\n  let elapsed = 0;\n  let step = 0;\n  let frameId = 0;\n\n  function calculateWavePoints() {\n    const pointList = [];\n    for (let i = 0; i <= Math.max(points, 1); i++) {\n      const scale = 100;\n      const x = i / points * getWidth();\n      const seed = (step + (i + i % points)) * speed * scale;\n      const currentHeight = Math.sin(seed / scale) * amplitude;\n      const y = Math.sin(seed / scale) * currentHeight + height;\n      pointList.push({ x, y });\n    }\n    return pointList;\n  }\n\n  function buildPath(points: Array<Point>) {\n    let svg = `M ${points[0].x} ${points[0].y}`;\n    const initial = {\n      x: (points[1].x - points[0].x) / 2,\n      y: (points[1].y - points[0].y) + points[0].y + (points[1].y - points[0].y)\n    };\n    const cubic = (a: Point, b: Point) => ` C ${a.x} ${a.y} ${a.x} ${a.y} ${b.x} ${b.y}`;\n    svg += cubic(initial, points[1]);\n    let point = initial;\n    for (let i = 1; i < points.length - 1; i++) {\n      point = {\n        x: (points[i].x - point.x) + points[i].x,\n        y: (points[i].y - point.y) + points[i].y\n      };\n      svg += cubic(point, points[i + 1]);\n    }\n    svg += ` L ${getWidth()} ${getHeight()}`;\n    svg += ` L 0 ${getHeight()} Z`;\n    return svg;\n  }\n\n  const getWidth = () => ref!.offsetWidth;\n  const getHeight = () => ref!.offsetHeight;\n\n  function redraw() {\n    setPath(buildPath(calculateWavePoints()));\n  }\n\n  function draw() {\n    if (!paused) {\n      const now = new Date().getTime();\n      elapsed += now - lastUpdate;\n      lastUpdate = now;\n    }\n    const scale = 1000;\n    step = elapsed * Math.PI / scale;\n    redraw();\n  }\n\n  function update() {\n    draw();\n\n    if (frameId) resume();\n  }\n\n  function resume() {\n    frameId = window.requestAnimationFrame(update);\n    lastUpdate = new Date().getTime();\n  }\n\n  onMount(() => {\n    if (!frameId) resume();\n  });\n\n  onCleanup(() => {\n    window.cancelAnimationFrame(frameId);\n    frameId = 0;\n  });\n\n  return (\n    <div\n      style={{ width: '100%', display: 'inline-block', ...style }}\n      className={className}\n      id={id}\n      ref={ref!}\n    >\n      <svg\n        width=\"100%\"\n        height=\"100%\"\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        {children}\n        <path d={path()} fill={fill} {...rest} />\n      </svg>\n    </div>\n  );\n}\n"],"names":[],"version":3,"file":"index.module.js.map"}